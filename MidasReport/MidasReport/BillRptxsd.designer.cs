//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MidasReport {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BillRptxsd")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BillRptxsd : global::System.Data.DataSet {
        
        private BillDataTable tableBill;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BillRptxsd() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BillRptxsd(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Bill"] != null)) {
                    base.Tables.Add(new BillDataTable(ds.Tables["Bill"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BillDataTable Bill {
            get {
                return this.tableBill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BillRptxsd cln = ((BillRptxsd)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Bill"] != null)) {
                    base.Tables.Add(new BillDataTable(ds.Tables["Bill"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBill = ((BillDataTable)(base.Tables["Bill"]));
            if ((initTable == true)) {
                if ((this.tableBill != null)) {
                    this.tableBill.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BillRptxsd";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BillRptxsd.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBill = new BillDataTable();
            base.Tables.Add(this.tableBill);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BillRptxsd ds = new BillRptxsd();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BillRowChangeEventHandler(object sender, BillRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BillDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnconame;
            
            private global::System.Data.DataColumn columnAdd1;
            
            private global::System.Data.DataColumn columnAdd2;
            
            private global::System.Data.DataColumn columnBILLNO;
            
            private global::System.Data.DataColumn columnBILLDATE;
            
            private global::System.Data.DataColumn columnlocname;
            
            private global::System.Data.DataColumn columnMonth;
            
            private global::System.Data.DataColumn columnTotAMT;
            
            private global::System.Data.DataColumn columnIsService;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnAttendance;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientCity;
            
            private global::System.Data.DataColumn columnContract_Person;
            
            private global::System.Data.DataColumn columnContract_No;
            
            private global::System.Data.DataColumn columnmis2;
            
            private global::System.Data.DataColumn columnmis6;
            
            private global::System.Data.DataColumn columnmis7;
            
            private global::System.Data.DataColumn columnmis8;
            
            private global::System.Data.DataColumn columnmis9;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columncmpimage;
            
            private global::System.Data.DataColumn columnmis1;
            
            private global::System.Data.DataColumn columnmis3;
            
            private global::System.Data.DataColumn columnmis4;
            
            private global::System.Data.DataColumn columnmis5;
            
            private global::System.Data.DataColumn columnmis10;
            
            private global::System.Data.DataColumn columnSession;
            
            private global::System.Data.DataColumn columnDtl_id;
            
            private global::System.Data.DataColumn columnHour;
            
            private global::System.Data.DataColumn columnMonthDays;
            
            private global::System.Data.DataColumn columnBILLAMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillDataTable() {
                this.TableName = "Bill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conameColumn {
                get {
                    return this.columnconame;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Add1Column {
                get {
                    return this.columnAdd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Add2Column {
                get {
                    return this.columnAdd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BILLNOColumn {
                get {
                    return this.columnBILLNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BILLDATEColumn {
                get {
                    return this.columnBILLDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locnameColumn {
                get {
                    return this.columnlocname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotAMTColumn {
                get {
                    return this.columnTotAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsServiceColumn {
                get {
                    return this.columnIsService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendanceColumn {
                get {
                    return this.columnAttendance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientCityColumn {
                get {
                    return this.columnClientCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contract_PersonColumn {
                get {
                    return this.columnContract_Person;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contract_NoColumn {
                get {
                    return this.columnContract_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis2Column {
                get {
                    return this.columnmis2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis6Column {
                get {
                    return this.columnmis6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis7Column {
                get {
                    return this.columnmis7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis8Column {
                get {
                    return this.columnmis8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis9Column {
                get {
                    return this.columnmis9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cmpimageColumn {
                get {
                    return this.columncmpimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis1Column {
                get {
                    return this.columnmis1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis3Column {
                get {
                    return this.columnmis3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis4Column {
                get {
                    return this.columnmis4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis5Column {
                get {
                    return this.columnmis5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mis10Column {
                get {
                    return this.columnmis10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SessionColumn {
                get {
                    return this.columnSession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dtl_idColumn {
                get {
                    return this.columnDtl_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HourColumn {
                get {
                    return this.columnHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthDaysColumn {
                get {
                    return this.columnMonthDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BILLAMTColumn {
                get {
                    return this.columnBILLAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillRow this[int index] {
                get {
                    return ((BillRow)(this.Rows[index]));
                }
            }
            
            public event BillRowChangeEventHandler BillRowChanging;
            
            public event BillRowChangeEventHandler BillRowChanged;
            
            public event BillRowChangeEventHandler BillRowDeleting;
            
            public event BillRowChangeEventHandler BillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBillRow(BillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillRow AddBillRow(
                        string coname, 
                        string Add1, 
                        string Add2, 
                        string BILLNO, 
                        string BILLDATE, 
                        string locname, 
                        string Month, 
                        string TotAMT, 
                        string IsService, 
                        string ServiceAmount, 
                        string Attendance, 
                        string RATE, 
                        string designation, 
                        string ClientName, 
                        string ClientCity, 
                        string Contract_Person, 
                        string Contract_No, 
                        string mis2, 
                        string mis6, 
                        string mis7, 
                        string mis8, 
                        string mis9, 
                        string Website, 
                        string Email, 
                        byte[] cmpimage, 
                        string mis1, 
                        string mis3, 
                        string mis4, 
                        string mis5, 
                        string mis10, 
                        string Session, 
                        string Dtl_id, 
                        string Hour, 
                        string MonthDays, 
                        double BILLAMT) {
                BillRow rowBillRow = ((BillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        coname,
                        Add1,
                        Add2,
                        BILLNO,
                        BILLDATE,
                        locname,
                        Month,
                        TotAMT,
                        IsService,
                        ServiceAmount,
                        Attendance,
                        RATE,
                        designation,
                        ClientName,
                        ClientCity,
                        Contract_Person,
                        Contract_No,
                        mis2,
                        mis6,
                        mis7,
                        mis8,
                        mis9,
                        Website,
                        Email,
                        cmpimage,
                        mis1,
                        mis3,
                        mis4,
                        mis5,
                        mis10,
                        Session,
                        Dtl_id,
                        Hour,
                        MonthDays,
                        BILLAMT};
                rowBillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBillRow);
                return rowBillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BillDataTable cln = ((BillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconame = base.Columns["coname"];
                this.columnAdd1 = base.Columns["Add1"];
                this.columnAdd2 = base.Columns["Add2"];
                this.columnBILLNO = base.Columns["BILLNO"];
                this.columnBILLDATE = base.Columns["BILLDATE"];
                this.columnlocname = base.Columns["locname"];
                this.columnMonth = base.Columns["Month"];
                this.columnTotAMT = base.Columns["TotAMT"];
                this.columnIsService = base.Columns["IsService"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnAttendance = base.Columns["Attendance"];
                this.columnRATE = base.Columns["RATE"];
                this.columndesignation = base.Columns["designation"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientCity = base.Columns["ClientCity"];
                this.columnContract_Person = base.Columns["Contract_Person"];
                this.columnContract_No = base.Columns["Contract_No"];
                this.columnmis2 = base.Columns["mis2"];
                this.columnmis6 = base.Columns["mis6"];
                this.columnmis7 = base.Columns["mis7"];
                this.columnmis8 = base.Columns["mis8"];
                this.columnmis9 = base.Columns["mis9"];
                this.columnWebsite = base.Columns["Website"];
                this.columnEmail = base.Columns["Email"];
                this.columncmpimage = base.Columns["cmpimage"];
                this.columnmis1 = base.Columns["mis1"];
                this.columnmis3 = base.Columns["mis3"];
                this.columnmis4 = base.Columns["mis4"];
                this.columnmis5 = base.Columns["mis5"];
                this.columnmis10 = base.Columns["mis10"];
                this.columnSession = base.Columns["Session"];
                this.columnDtl_id = base.Columns["Dtl_id"];
                this.columnHour = base.Columns["Hour"];
                this.columnMonthDays = base.Columns["MonthDays"];
                this.columnBILLAMT = base.Columns["BILLAMT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconame = new global::System.Data.DataColumn("coname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconame);
                this.columnAdd1 = new global::System.Data.DataColumn("Add1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdd1);
                this.columnAdd2 = new global::System.Data.DataColumn("Add2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdd2);
                this.columnBILLNO = new global::System.Data.DataColumn("BILLNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILLNO);
                this.columnBILLDATE = new global::System.Data.DataColumn("BILLDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILLDATE);
                this.columnlocname = new global::System.Data.DataColumn("locname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocname);
                this.columnMonth = new global::System.Data.DataColumn("Month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnTotAMT = new global::System.Data.DataColumn("TotAMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotAMT);
                this.columnIsService = new global::System.Data.DataColumn("IsService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsService);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnAttendance = new global::System.Data.DataColumn("Attendance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendance);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientCity = new global::System.Data.DataColumn("ClientCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientCity);
                this.columnContract_Person = new global::System.Data.DataColumn("Contract_Person", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Person);
                this.columnContract_No = new global::System.Data.DataColumn("Contract_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_No);
                this.columnmis2 = new global::System.Data.DataColumn("mis2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis2);
                this.columnmis6 = new global::System.Data.DataColumn("mis6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis6);
                this.columnmis7 = new global::System.Data.DataColumn("mis7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis7);
                this.columnmis8 = new global::System.Data.DataColumn("mis8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis8);
                this.columnmis9 = new global::System.Data.DataColumn("mis9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis9);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columncmpimage = new global::System.Data.DataColumn("cmpimage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmpimage);
                this.columnmis1 = new global::System.Data.DataColumn("mis1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis1);
                this.columnmis3 = new global::System.Data.DataColumn("mis3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis3);
                this.columnmis4 = new global::System.Data.DataColumn("mis4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis4);
                this.columnmis5 = new global::System.Data.DataColumn("mis5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis5);
                this.columnmis10 = new global::System.Data.DataColumn("mis10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmis10);
                this.columnSession = new global::System.Data.DataColumn("Session", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSession);
                this.columnDtl_id = new global::System.Data.DataColumn("Dtl_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDtl_id);
                this.columnHour = new global::System.Data.DataColumn("Hour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHour);
                this.columnMonthDays = new global::System.Data.DataColumn("MonthDays", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthDays);
                this.columnBILLAMT = new global::System.Data.DataColumn("BILLAMT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILLAMT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillRow NewBillRow() {
                return ((BillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BillRowChanged != null)) {
                    this.BillRowChanged(this, new BillRowChangeEvent(((BillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BillRowChanging != null)) {
                    this.BillRowChanging(this, new BillRowChangeEvent(((BillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BillRowDeleted != null)) {
                    this.BillRowDeleted(this, new BillRowChangeEvent(((BillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BillRowDeleting != null)) {
                    this.BillRowDeleting(this, new BillRowChangeEvent(((BillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBillRow(BillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BillRptxsd ds = new BillRptxsd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BillRow : global::System.Data.DataRow {
            
            private BillDataTable tableBill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBill = ((BillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coname {
                get {
                    try {
                        return ((string)(this[this.tableBill.conameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coname\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.conameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Add1 {
                get {
                    try {
                        return ((string)(this[this.tableBill.Add1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Add1\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.Add1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Add2 {
                get {
                    try {
                        return ((string)(this[this.tableBill.Add2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Add2\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.Add2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BILLNO {
                get {
                    try {
                        return ((string)(this[this.tableBill.BILLNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BILLNO\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.BILLNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BILLDATE {
                get {
                    try {
                        return ((string)(this[this.tableBill.BILLDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BILLDATE\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.BILLDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string locname {
                get {
                    try {
                        return ((string)(this[this.tableBill.locnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'locname\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.locnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Month {
                get {
                    try {
                        return ((string)(this[this.tableBill.MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Month\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotAMT {
                get {
                    try {
                        return ((string)(this[this.tableBill.TotAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotAMT\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.TotAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsService {
                get {
                    try {
                        return ((string)(this[this.tableBill.IsServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsService\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.IsServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceAmount {
                get {
                    try {
                        return ((string)(this[this.tableBill.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Attendance {
                get {
                    try {
                        return ((string)(this[this.tableBill.AttendanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Attendance\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.AttendanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATE {
                get {
                    try {
                        return ((string)(this[this.tableBill.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tableBill.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableBill.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientCity {
                get {
                    try {
                        return ((string)(this[this.tableBill.ClientCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientCity\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.ClientCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contract_Person {
                get {
                    try {
                        return ((string)(this[this.tableBill.Contract_PersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract_Person\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.Contract_PersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contract_No {
                get {
                    try {
                        return ((string)(this[this.tableBill.Contract_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract_No\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.Contract_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis2 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis2\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis6 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis6\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis7 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis7\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis8 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis8\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis9 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis9\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tableBill.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableBill.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] cmpimage {
                get {
                    try {
                        return ((byte[])(this[this.tableBill.cmpimageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cmpimage\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.cmpimageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis1 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis1\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis3 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis3\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis4 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis4\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis5 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis5\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mis10 {
                get {
                    try {
                        return ((string)(this[this.tableBill.mis10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mis10\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.mis10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Session {
                get {
                    try {
                        return ((string)(this[this.tableBill.SessionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Session\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.SessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dtl_id {
                get {
                    try {
                        return ((string)(this[this.tableBill.Dtl_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dtl_id\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.Dtl_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Hour {
                get {
                    try {
                        return ((string)(this[this.tableBill.HourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hour\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.HourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonthDays {
                get {
                    try {
                        return ((string)(this[this.tableBill.MonthDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthDays\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.MonthDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BILLAMT {
                get {
                    try {
                        return ((double)(this[this.tableBill.BILLAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BILLAMT\' in table \'Bill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBill.BILLAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconameNull() {
                return this.IsNull(this.tableBill.conameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconameNull() {
                this[this.tableBill.conameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdd1Null() {
                return this.IsNull(this.tableBill.Add1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdd1Null() {
                this[this.tableBill.Add1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdd2Null() {
                return this.IsNull(this.tableBill.Add2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdd2Null() {
                this[this.tableBill.Add2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILLNONull() {
                return this.IsNull(this.tableBill.BILLNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILLNONull() {
                this[this.tableBill.BILLNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILLDATENull() {
                return this.IsNull(this.tableBill.BILLDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILLDATENull() {
                this[this.tableBill.BILLDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocnameNull() {
                return this.IsNull(this.tableBill.locnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocnameNull() {
                this[this.tableBill.locnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthNull() {
                return this.IsNull(this.tableBill.MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthNull() {
                this[this.tableBill.MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotAMTNull() {
                return this.IsNull(this.tableBill.TotAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotAMTNull() {
                this[this.tableBill.TotAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsServiceNull() {
                return this.IsNull(this.tableBill.IsServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsServiceNull() {
                this[this.tableBill.IsServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableBill.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableBill.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttendanceNull() {
                return this.IsNull(this.tableBill.AttendanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttendanceNull() {
                this[this.tableBill.AttendanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATENull() {
                return this.IsNull(this.tableBill.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATENull() {
                this[this.tableBill.RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tableBill.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tableBill.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableBill.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tableBill.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientCityNull() {
                return this.IsNull(this.tableBill.ClientCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientCityNull() {
                this[this.tableBill.ClientCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContract_PersonNull() {
                return this.IsNull(this.tableBill.Contract_PersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContract_PersonNull() {
                this[this.tableBill.Contract_PersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContract_NoNull() {
                return this.IsNull(this.tableBill.Contract_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContract_NoNull() {
                this[this.tableBill.Contract_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis2Null() {
                return this.IsNull(this.tableBill.mis2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis2Null() {
                this[this.tableBill.mis2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis6Null() {
                return this.IsNull(this.tableBill.mis6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis6Null() {
                this[this.tableBill.mis6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis7Null() {
                return this.IsNull(this.tableBill.mis7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis7Null() {
                this[this.tableBill.mis7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis8Null() {
                return this.IsNull(this.tableBill.mis8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis8Null() {
                this[this.tableBill.mis8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis9Null() {
                return this.IsNull(this.tableBill.mis9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis9Null() {
                this[this.tableBill.mis9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tableBill.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebsiteNull() {
                this[this.tableBill.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableBill.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableBill.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscmpimageNull() {
                return this.IsNull(this.tableBill.cmpimageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcmpimageNull() {
                this[this.tableBill.cmpimageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis1Null() {
                return this.IsNull(this.tableBill.mis1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis1Null() {
                this[this.tableBill.mis1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis3Null() {
                return this.IsNull(this.tableBill.mis3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis3Null() {
                this[this.tableBill.mis3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis4Null() {
                return this.IsNull(this.tableBill.mis4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis4Null() {
                this[this.tableBill.mis4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis5Null() {
                return this.IsNull(this.tableBill.mis5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis5Null() {
                this[this.tableBill.mis5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismis10Null() {
                return this.IsNull(this.tableBill.mis10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmis10Null() {
                this[this.tableBill.mis10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSessionNull() {
                return this.IsNull(this.tableBill.SessionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSessionNull() {
                this[this.tableBill.SessionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDtl_idNull() {
                return this.IsNull(this.tableBill.Dtl_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDtl_idNull() {
                this[this.tableBill.Dtl_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHourNull() {
                return this.IsNull(this.tableBill.HourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHourNull() {
                this[this.tableBill.HourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthDaysNull() {
                return this.IsNull(this.tableBill.MonthDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthDaysNull() {
                this[this.tableBill.MonthDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILLAMTNull() {
                return this.IsNull(this.tableBill.BILLAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILLAMTNull() {
                this[this.tableBill.BILLAMTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BillRowChangeEvent : global::System.EventArgs {
            
            private BillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillRowChangeEvent(BillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591